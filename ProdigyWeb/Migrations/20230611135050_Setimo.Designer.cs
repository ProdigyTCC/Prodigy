// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProdigyWeb.Data;

#nullable disable

namespace ProdigyWeb.Migrations
{
    [DbContext(typeof(ProdigyWebContext))]
    [Migration("20230611135050_Setimo")]
    partial class Setimo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProdigyWeb.Models.Cartao", b =>
                {
                    b.Property<int>("CartaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartaoId"));

                    b.Property<string>("CnpjTitular")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<string>("CpfTitular")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("NomeTitular")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NumeroCartao")
                        .HasColumnType("text");

                    b.Property<string>("TipoCartao")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ValidadeCartao")
                        .HasColumnType("text");

                    b.HasKey("CartaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Config", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConfigId"));

                    b.Property<string>("PorcentagemDesconto")
                        .HasColumnType("text");

                    b.Property<string>("PorcentagemLucro")
                        .HasColumnType("text");

                    b.Property<string>("TaxaCredito")
                        .HasColumnType("text");

                    b.Property<string>("TaxaDebito")
                        .HasColumnType("text");

                    b.Property<string>("TaxaParcela")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ConfigId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ProdigyWeb.Models.ContaBancaria", b =>
                {
                    b.Property<int>("ContaBancariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContaBancariaId"));

                    b.Property<int>("Agencia")
                        .HasColumnType("integer");

                    b.Property<string>("CnpjTitular")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<bool>("CobrancaAuto")
                        .HasColumnType("boolean");

                    b.Property<int>("Conta")
                        .HasColumnType("integer");

                    b.Property<string>("CpfTitular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ContaBancariaId");

                    b.ToTable("ContaBancarias");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EnderecoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("EnderecoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.EnderecoComposta", b =>
                {
                    b.Property<int>("UsuarioEnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioEnderecoId"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<int>("JuridicoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioEnderecoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("JuridicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EnderecoCompostas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Juridico", b =>
                {
                    b.Property<int>("JuridicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JuridicoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CertificadoNF")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DataFundacao")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Natureza")
                        .HasColumnType("text");

                    b.Property<string>("NomeRazao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RgEstadual")
                        .HasColumnType("text");

                    b.Property<string>("RgMunicipal")
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("JuridicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Juridicos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuloId"));

                    b.Property<int>("NomeSistema")
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("ModuloId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.ModuloComposta", b =>
                {
                    b.Property<int>("ModuloCompostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuloCompostaId"));

                    b.Property<int?>("ConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("ModuloId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ModuloCompostaId");

                    b.HasIndex("ConfigId");

                    b.HasIndex("ModuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ModuloComposta");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PagamentoId"));

                    b.Property<int>("CartaoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaBancariaId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<int>("PixId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("PagamentoId");

                    b.HasIndex("CartaoId");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("PixId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pix", b =>
                {
                    b.Property<int>("PixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PixId"));

                    b.Property<string>("Comprovante")
                        .HasColumnType("text");

                    b.Property<string>("QrCodeEstatico")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PixId");

                    b.ToTable("Pix");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SAgenda", b =>
                {
                    b.Property<int>("SAgendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SAgendaId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("SAgendaId");

                    b.ToTable("SAgendas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SAgendaComposta", b =>
                {
                    b.Property<int>("SAgendaCompostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SAgendaCompostaId"));

                    b.Property<int>("AgendaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("SClienteId")
                        .HasColumnType("integer");

                    b.HasKey("SAgendaCompostaId");

                    b.HasIndex("AgendaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("SAgendaCompostas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SCaixa", b =>
                {
                    b.Property<int>("SCaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SCaixaId"));

                    b.Property<decimal>("ValorAbertura")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorFechamento")
                        .HasColumnType("numeric");

                    b.HasKey("SCaixaId");

                    b.ToTable("SCaixas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SCategoriaProduto", b =>
                {
                    b.Property<int>("SCategoriaProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SCategoriaProdutoId"));

                    b.Property<string>("DescCategoria")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("SCategoriaProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SCategoriaProdutos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SCliente", b =>
                {
                    b.Property<int>("SClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SClienteId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("DataNacimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("SClienteId");

                    b.ToTable("SClientes");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SClienteJuridico", b =>
                {
                    b.Property<int>("SClienteJuridicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SClienteJuridicoId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataResgistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Natureza")
                        .HasColumnType("text");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RgEstadual")
                        .HasColumnType("text");

                    b.Property<string>("RgMunicipal")
                        .HasColumnType("text");

                    b.Property<int>("SClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("SClienteJuridicoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("SClienteJuridicos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SEndereco", b =>
                {
                    b.Property<int>("SEnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SEnderecoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Cep")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("SEnderecoId");

                    b.ToTable("SEnderecos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SEnderecoComposta", b =>
                {
                    b.Property<int>("SEnderecoCompostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SEnderecoCompostaId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ClienteJuridicoId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("integer");

                    b.Property<int>("SClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("SClienteJuridicoId")
                        .HasColumnType("integer");

                    b.Property<int>("SEnderecoId")
                        .HasColumnType("integer");

                    b.Property<int>("SFornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("SFuncionarioId")
                        .HasColumnType("integer");

                    b.HasKey("SEnderecoCompostaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ClienteJuridicoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("SEnderecoCompostas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SFornecedor", b =>
                {
                    b.Property<int>("SFornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SFornecedorId"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CpfRepresentante")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NomeRazao")
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    b.Property<string>("NomeRepresentante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RgEstadual")
                        .HasColumnType("text");

                    b.Property<string>("RgMunicipal")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("SFornecedorId");

                    b.ToTable("SFornecedores");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SFuncionario", b =>
                {
                    b.Property<int>("SFuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SFuncionarioId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Habilitacao")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Nivel")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Pis")
                        .HasColumnType("text");

                    b.Property<int>("QtFilhos")
                        .HasColumnType("integer");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("SFuncionarioId");

                    b.ToTable("SFuncionarios");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SPedido", b =>
                {
                    b.Property<int>("SPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SPedidoId"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<string>("NotaFiscal")
                        .HasColumnType("text");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantProduto")
                        .HasColumnType("integer");

                    b.Property<int>("SFornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("SProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorPedido")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SPedidoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("SPedidos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SProduto", b =>
                {
                    b.Property<int>("SProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SProdutoId"));

                    b.Property<int?>("CategoriaProdutoId")
                        .HasColumnType("integer");

                    b.Property<string>("DataEntrada")
                        .HasColumnType("text");

                    b.Property<string>("DataValidade")
                        .HasColumnType("text");

                    b.Property<string>("DescProduto")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("QuantProduto")
                        .HasColumnType("integer");

                    b.Property<int>("SCategoriaProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("SFornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ValorFinal")
                        .HasColumnType("text");

                    b.Property<string>("ValorInicial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SProdutoId");

                    b.HasIndex("CategoriaProdutoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SProdutos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SVenda", b =>
                {
                    b.Property<int>("SVendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SVendaId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("SClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("SFuncionarioId")
                        .HasColumnType("integer");

                    b.Property<int>("SProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SVendaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("SVendas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("text");

                    b.Property<string>("DataRegistro")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nivel")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Plano")
                        .HasColumnType("text");

                    b.Property<string>("Raca")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Cartao", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Config", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Endereco", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.EnderecoComposta", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Juridico", "Juridico")
                        .WithMany("EnderecoCompostas")
                        .HasForeignKey("JuridicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany("EnderecoCompostas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Juridico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Juridico", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.ModuloComposta", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Config", null)
                        .WithMany("ModuloComposta")
                        .HasForeignKey("ConfigId");

                    b.HasOne("ProdigyWeb.Models.Modulo", "Modulo")
                        .WithMany("ModuloComposta")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany("ModuloComposta")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pagamento", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Pix", "Pix")
                        .WithMany()
                        .HasForeignKey("PixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany("Pagamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");

                    b.Navigation("ContaBancaria");

                    b.Navigation("Pix");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SAgendaComposta", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SAgenda", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.SCliente", "SCliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Agenda");

                    b.Navigation("SCliente");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SCategoriaProduto", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SClienteJuridico", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SCliente", "SCliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("SCliente");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SEnderecoComposta", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SCliente", "SCliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ProdigyWeb.Models.SClienteJuridico", "SClienteJuridico")
                        .WithMany()
                        .HasForeignKey("ClienteJuridicoId");

                    b.HasOne("ProdigyWeb.Models.SEndereco", "SEndereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.HasOne("ProdigyWeb.Models.SFornecedor", "SFornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("ProdigyWeb.Models.SFuncionario", "SFuncionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("SCliente");

                    b.Navigation("SClienteJuridico");

                    b.Navigation("SEndereco");

                    b.Navigation("SFornecedor");

                    b.Navigation("SFuncionario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SPedido", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SFornecedor", "SFornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("ProdigyWeb.Models.SProduto", "SProduto")
                        .WithMany("SPedidos")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("SFornecedor");

                    b.Navigation("SProduto");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SProduto", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SCategoriaProduto", "SCategoriaProduto")
                        .WithMany()
                        .HasForeignKey("CategoriaProdutoId");

                    b.HasOne("ProdigyWeb.Models.SFornecedor", "SFornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SCategoriaProduto");

                    b.Navigation("SFornecedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SVenda", b =>
                {
                    b.HasOne("ProdigyWeb.Models.SCliente", "SCliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ProdigyWeb.Models.SFuncionario", "SFuncionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("ProdigyWeb.Models.SProduto", "SProduto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("SCliente");

                    b.Navigation("SFuncionario");

                    b.Navigation("SProduto");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Config", b =>
                {
                    b.Navigation("ModuloComposta");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Juridico", b =>
                {
                    b.Navigation("EnderecoCompostas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Modulo", b =>
                {
                    b.Navigation("ModuloComposta");
                });

            modelBuilder.Entity("ProdigyWeb.Models.SProduto", b =>
                {
                    b.Navigation("SPedidos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Usuario", b =>
                {
                    b.Navigation("EnderecoCompostas");

                    b.Navigation("ModuloComposta");

                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProdigyWeb.Data;

#nullable disable

namespace ProdigyWeb.Migrations
{
    [DbContext(typeof(ProdigyWebContext))]
    [Migration("20230309013805_InicioProdigyWeb")]
    partial class InicioProdigyWeb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProdigyWeb.Models.Cartao", b =>
                {
                    b.Property<int>("CartaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartaoId"));

                    b.Property<string>("CnpjTitular")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CpfTitular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NumeroCartao")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ValidadeCartao")
                        .HasColumnType("date");

                    b.HasKey("CartaoId");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Config", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConfigId"));

                    b.Property<string>("Tema")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ConfigId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ProdigyWeb.Models.ContaBancaria", b =>
                {
                    b.Property<int>("ContaBancariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContaBancariaId"));

                    b.Property<int>("Agencia")
                        .HasColumnType("integer");

                    b.Property<string>("CnpjTitular")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<bool>("CobrancaAuto")
                        .HasColumnType("boolean");

                    b.Property<int>("Conta")
                        .HasColumnType("integer");

                    b.Property<string>("CpfTitular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ContaBancariaId");

                    b.ToTable("ContaBancarias");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Contato", b =>
                {
                    b.Property<int>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContatoId"));

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("JuridicoId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ContatoId");

                    b.HasIndex("JuridicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EnderecoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.EnderecoComposta", b =>
                {
                    b.Property<int>("UsuarioEnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioEnderecoId"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<int>("JuridicoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioEnderecoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("JuridicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EnderecoCompostas");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Juridico", b =>
                {
                    b.Property<int>("JuridicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JuridicoId"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<DateOnly>("DataFundacao")
                        .HasColumnType("date");

                    b.Property<string>("Natureza")
                        .HasColumnType("text");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RgEstadual")
                        .HasColumnType("text");

                    b.Property<string>("RgMunicipal")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("JuridicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Juridicos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuloId"));

                    b.Property<int>("NomeSistema")
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ModuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PagamentoId"));

                    b.Property<int>("CartaoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaBancariaId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DataPagamento")
                        .HasColumnType("date");

                    b.Property<int>("PixId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoPagamento")
                        .HasMaxLength(20)
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("PagamentoId");

                    b.HasIndex("CartaoId");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("PixId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pix", b =>
                {
                    b.Property<int>("PixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PixId"));

                    b.Property<string>("Comprovante")
                        .HasColumnType("text");

                    b.Property<string>("QrCodeEstatico")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PixId");

                    b.ToTable("Pix");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Raca")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Config", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Contato", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Juridico", "Juridico")
                        .WithMany()
                        .HasForeignKey("JuridicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Juridico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.EnderecoComposta", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Juridico", "Juridico")
                        .WithMany()
                        .HasForeignKey("JuridicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Juridico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Juridico", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Modulo", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProdigyWeb.Models.Pagamento", b =>
                {
                    b.HasOne("ProdigyWeb.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Pix", "Pix")
                        .WithMany()
                        .HasForeignKey("PixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProdigyWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");

                    b.Navigation("ContaBancaria");

                    b.Navigation("Pix");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
